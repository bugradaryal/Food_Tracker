// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(DataDbContext))]
    [Migration("20220525135433_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Food", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("gün_bozulma_tarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<double>("kalori")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("kalsiyum_gr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("karbonhidrat_gr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<int>("karbonhidrat_yüzde")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<double>("kollestrol_gr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("lif_gr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("potasyum_gr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("protein_gr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<int>("protein_yüzde")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<double>("sodyum_gr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("yağ_gr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<int>("yağ_yüzde")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("yemek_ismi")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.HasKey("id");

                    b.ToTable("Foods");

                    b.HasData(
                        new
                        {
                            id = 1,
                            gün_bozulma_tarihi = 15,
                            kalori = 40.0,
                            kalsiyum_gr = 0.0,
                            karbonhidrat_gr = 20.800000000000001,
                            karbonhidrat_yüzde = 1,
                            kollestrol_gr = 0.0,
                            lif_gr = 9.0,
                            potasyum_gr = 4.0,
                            protein_gr = 30.0,
                            protein_yüzde = 3,
                            sodyum_gr = 0.0,
                            yağ_gr = 0.0,
                            yağ_yüzde = 0,
                            yemek_ismi = "Elma"
                        },
                        new
                        {
                            id = 2,
                            gün_bozulma_tarihi = 10,
                            kalori = 50.0,
                            kalsiyum_gr = 0.0,
                            karbonhidrat_gr = 30.199999999999999,
                            karbonhidrat_yüzde = 2,
                            kollestrol_gr = 4.0,
                            lif_gr = 3.0,
                            potasyum_gr = 4.0,
                            protein_gr = 10.5,
                            protein_yüzde = 2,
                            sodyum_gr = 0.0,
                            yağ_gr = 0.0,
                            yağ_yüzde = 0,
                            yemek_ismi = "Erik"
                        },
                        new
                        {
                            id = 3,
                            gün_bozulma_tarihi = 5,
                            kalori = 20.0,
                            kalsiyum_gr = 0.0,
                            karbonhidrat_gr = 5.0,
                            karbonhidrat_yüzde = 1,
                            kollestrol_gr = 0.0,
                            lif_gr = 1.0,
                            potasyum_gr = 3.0,
                            protein_gr = 15.0,
                            protein_yüzde = 10,
                            sodyum_gr = 1.0,
                            yağ_gr = 5.0999999999999996,
                            yağ_yüzde = 1,
                            yemek_ismi = "Kiraz"
                        });
                });

            modelBuilder.Entity("Entities.Fridge", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(20)")
                        .HasDefaultValue("Buzdolabım");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("user_id");

                    b.ToTable("Fridges");
                });

            modelBuilder.Entity("Entities.My_Food", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Foods_id")
                        .HasColumnType("int");

                    b.Property<int>("Fridges_id")
                        .HasColumnType("int");

                    b.Property<string>("Jobs_id")
                        .HasColumnType("varchar(300)");

                    b.Property<DateTime>("bozulma_tarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 5, 25, 16, 54, 33, 38, DateTimeKind.Local).AddTicks(195));

                    b.Property<DateTime>("eklenme_tarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 5, 25, 16, 54, 33, 38, DateTimeKind.Local).AddTicks(9548));

                    b.HasKey("id");

                    b.HasIndex("Foods_id");

                    b.HasIndex("Fridges_id");

                    b.ToTable("My_Foods");
                });

            modelBuilder.Entity("Entities.Notification", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("bildirim")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("user_id");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Entities.NotificationType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("tercih_eposta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("tercih_sms")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("tercih_uygulama")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("user_id")
                        .IsUnique();

                    b.ToTable("NotificationType");
                });

            modelBuilder.Entity("Entities.Notification_Count", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("notificationscount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("user_id");

                    b.ToTable("Notification_Counts");
                });

            modelBuilder.Entity("Entities.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Cinsiyet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(15)")
                        .HasDefaultValue("Belirtmemiş");

                    b.Property<string>("Eposta")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Telefon")
                        .HasColumnType("varchar(10)");

                    b.HasKey("id");

                    b.HasIndex("Eposta")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Entities.User_article", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 5, 25, 16, 54, 33, 40, DateTimeKind.Local).AddTicks(4368));

                    b.Property<string>("text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("varchar(3000)");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("user_id");

                    b.ToTable("User_articles");
                });

            modelBuilder.Entity("Entities.Fridge", b =>
                {
                    b.HasOne("Entities.User", "User")
                        .WithMany("Fridge")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entities.My_Food", b =>
                {
                    b.HasOne("Entities.Food", "Food")
                        .WithOne("My_Food")
                        .HasForeignKey("Entities.My_Food", "Foods_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Entities.Fridge", "Fridge")
                        .WithMany("My_Food")
                        .HasForeignKey("Fridges_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Food");

                    b.Navigation("Fridge");
                });

            modelBuilder.Entity("Entities.Notification", b =>
                {
                    b.HasOne("Entities.User", "User")
                        .WithMany("Notification")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entities.NotificationType", b =>
                {
                    b.HasOne("Entities.User", "User")
                        .WithOne("NotificationType")
                        .HasForeignKey("Entities.NotificationType", "user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entities.Notification_Count", b =>
                {
                    b.HasOne("Entities.User", "User")
                        .WithOne("Notification_Count")
                        .HasForeignKey("Entities.Notification_Count", "user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entities.User_article", b =>
                {
                    b.HasOne("Entities.User", "User")
                        .WithMany("User_article")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entities.Food", b =>
                {
                    b.Navigation("My_Food");
                });

            modelBuilder.Entity("Entities.Fridge", b =>
                {
                    b.Navigation("My_Food");
                });

            modelBuilder.Entity("Entities.User", b =>
                {
                    b.Navigation("Fridge");

                    b.Navigation("Notification");

                    b.Navigation("Notification_Count");

                    b.Navigation("NotificationType");

                    b.Navigation("User_article");
                });
#pragma warning restore 612, 618
        }
    }
}
